==========================
How to use ``5-text_indentation`` module
==========================

Using ``text_indentation()`` 
--------------------------
This function that prints a text with 2 new lines after each of these characters: ., ? and :

_______________________
Import function to test
_______________________

>>> text_indentation = __import__("5-text_indentation").text_indentation

__________________________
Documentation Verification
__________________________


>>> len(__import__("5-text_indentation").__doc__) > 0
True

>>> len(__import__("5-text_indentation").text_indentation.__doc__) > 0
True

__________________________
Trivial cases
__________________________

>>> text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.  Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere?  Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere.  Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres"

>>> text_indentation(text)
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
<BLANKLINE>
Quonam modo?
<BLANKLINE>
Utrum igitur tibi litteram videor an totas paginas commovere?
<BLANKLINE>
Non autem hoc:
<BLANKLINE>
igitur ne illud quidem.
<BLANKLINE>
Fortasse id optimum, sed ubi illud:
<BLANKLINE>
Plus semper voluptatis?
<BLANKLINE>
Teneo, inquit, finem illi videri nihil dolere.
<BLANKLINE>
Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
<BLANKLINE>
Si id dicis, vicimus.
<BLANKLINE>
Inde sermone vario sex illa a Dipylo stadia confecimus.
<BLANKLINE>
Sin aliud quid voles, postea.
<BLANKLINE>
Quae animi affectio suum cuique tribuens atque hanc, quam dico.
<BLANKLINE>
Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

>>> text = "Hi, my name is Ivan D. Lasso: How are you? Fine"

>>> text_indentation(text)
Hi, my name is Ivan D.
<BLANKLINE>
Lasso:
<BLANKLINE>
How are you?
<BLANKLINE>
Fine

>>> text = "Hi,   my name is Ivan D.   Lasso:   How are you?   Fine"

>>> text_indentation(text)
Hi,   my name is Ivan D.
<BLANKLINE>
Lasso:
<BLANKLINE>
How are you?
<BLANKLINE>
Fine

>>> text = "Hi,   my name is Ivan D.   Lasso:   How are you?   Fine   "

>>> text_indentation(text)
Hi,   my name is Ivan D.
<BLANKLINE>
Lasso:
<BLANKLINE>
How are you?
<BLANKLINE>
Fine

>>> text = "Hi,   my name is Ivan D.   Lasso:"

>>> text_indentation(text)
Hi,   my name is Ivan D.
<BLANKLINE>
Lasso:
<BLANKLINE>

>>> text = "Julien Barbier"

>>> text_indentation(text)
Julien Barbier


>>> text = "    Julien Barbier   "

>>> text_indentation(text)
Julien Barbier

>>> text = "Julien           "

>>> text_indentation(text)
Julien

>>> text_indentation("")
Traceback (most recent call last):
TypeError: text must be a string
  
________________________
Argument Cases
________________________


>>> text_indentation(None)
Traceback (most recent call last):
TypeError: text must be a string

________________________
Type cases
________________________

>>> text_indentation(2)
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation(1.5)
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation([1, 2, 3])
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation((1, 2, 3))
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation({"Julien":1, "Barbier":2})
Traceback (most recent call last):
TypeError: text must be a string

________________________

Overflow Cases
________________________

N/A
________________________
Division by Zero
________________________

N/A
